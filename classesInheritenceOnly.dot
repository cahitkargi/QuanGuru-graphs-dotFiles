digraph "classes_quanguru" {
graph [ dpi=300 ];
rankdir=BT
charset="utf-8"

/* 
 * all the classes: gathered with other classes in the same module and (mostly) arranged in the order they appear in the 
 * module (expect when I switched the order to adjust the .png), this arrangement shows where they are in the inheritance
 * or where they become part of composition in the inheritance.
 * The modules are arranged: - first from the top of the inheritance, - then what I think is a more fundamental module.
 * 
 * nodes in each module are shown with the same color. Note that I treat QGates as part of QPro
 */

// base.py
"classes.base.aliasClass" [color="black", fontcolor="black", label="aliasClass", shape="box", style="filled", fillcolor="#f0ffff"];
"classes.base.aliasDict" [color="black", fontcolor="black", label="aliasDict", shape="box", style="filled", fillcolor="#f0ffff"];
"classes.base.named" [color="black", fontcolor="black", label="named", shape="box", style="filled", fillcolor="#f0ffff"];
"classes.base._auxiliaryClass" [color="black", fontcolor="black", label="_auxiliaryClass", shape="box", style="filled", fillcolor="#f0ffff"];
"classes.base.qBase" [color="black", fontcolor="black", label="qBase", shape="box", style="filled", fillcolor="#f0ffff"];

// baseClasses.py
"classes.baseClasses.updateBase" [color="black", fontcolor="black", label="updateBase", shape="box", style="filled", fillcolor="#f5f5dc"];
"classes.baseClasses._parameter" [color="black", fontcolor="black", label="_parameter", shape="box", style="filled", fillcolor="#f5f5dc"];
"classes.baseClasses.paramBoundBase" [color="black", fontcolor="black", label="paramBoundBase", shape="box", style="filled", fillcolor="#f5f5dc"];
"classes.baseClasses.computeBase" [color="black", fontcolor="black", label="computeBase", shape="box", style="filled", fillcolor="#f5f5dc"];
"classes.baseClasses.qBaseSim" [color="black", fontcolor="black", label="qBaseSim", shape="box", style="filled", fillcolor="#f5f5dc"];
"classes.baseClasses.stateBase" [color="black", fontcolor="black", label="stateBase", shape="box", style="filled", fillcolor="#f5f5dc"];
"classes.baseClasses.timeBase" [color="black", fontcolor="black", label="timeBase", shape="box", style="filled", fillcolor="#f5f5dc"];

// QSys.py
"classes.QSys.genericQSys" [color="black", fontcolor="black", label="genericQSys", shape="box", style="filled", fillcolor="#cbeaf5"];
"classes.QSys.QuantumSystem" [color="black", fontcolor="black", label="QuantumSystem", shape="box", style="filled", fillcolor="#cbeaf5"];
"classes.QSys.compQSystem" [color="black", fontcolor="black", label="compQSystem", shape="box", style="filled", fillcolor="#cbeaf5"];
"classes.QSys.termTimeDep" [color="black", fontcolor="black", label="termTimeDep", shape="box", style="filled", fillcolor="#cbeaf5"];
"classes.QSys.term" [color="black", fontcolor="black", label="term", shape="box", style="filled", fillcolor="#cbeaf5"];
"classes.QSys.qSystem" [color="black", fontcolor="black", label="qSystem", shape="box", style="filled", fillcolor="#cbeaf5"];
"classes.QSys.Spin" [color="black", fontcolor="black", label="Spin", shape="box", style="filled", fillcolor="#cbeaf5"];
"classes.QSys.Qubit" [color="black", fontcolor="black", label="Qubit", shape="box", style="filled", fillcolor="#cbeaf5"];
"classes.QSys.Cavity" [color="black", fontcolor="black", label="Cavity", shape="box", style="filled", fillcolor="#cbeaf5"];
"classes.QSys.qCoupling" [color="black", fontcolor="black", label="qCoupling", shape="box", style="filled", fillcolor="#cbeaf5"];

// QSim.py
"classes.QSim.Simulation" [color="black", fontcolor="black", label="Simulation", shape="box", style="filled", fillcolor="#ffc7c7"];
"classes.QSim._poolMemory" [color="black", fontcolor="black", label="_poolMemory", shape="box", style="filled", fillcolor="#ffc7c7"];

// QPro.py (and QGates)
"classes.QPro.genericProtocol" [color="black", fontcolor="black", label="genericProtocol", shape="box", style="filled", fillcolor="#e5ffe3"];
"classes.QPro.qProtocol" [color="black", fontcolor="black", label="qProtocol", shape="box", style="filled", fillcolor="#e5ffe3"];
"classes.QPro.copyStep" [color="black", fontcolor="black", label="copyStep", shape="box", style="filled", fillcolor="#e5ffe3"];
"classes.QPro.freeEvolution" [color="black", fontcolor="black", label="freeEvolution", shape="box", style="filled", fillcolor="#e5ffe3"];
"classes.QPro.Gate" [color="black", fontcolor="black", label="Gate", shape="box", style="filled", fillcolor="#e5ffe3"];
"classes.QPro.Update" [color="black", fontcolor="black", label="Update", shape="box", style="filled", fillcolor="#e5ffe3"];
"classes.QGates.SpinRotation" [color="black", fontcolor="black", label="SpinRotation", shape="box", style="filled", fillcolor="#e5ffe3"];
"classes.QGates.xGate" [color="black", fontcolor="black", label="xGate", shape="box", style="filled", fillcolor="#e5ffe3"];

// QSweep.py
"classes.QSweep._sweep" [color="black", fontcolor="black", label="_sweep", shape="box", style="filled", fillcolor="#fffaad"];
"classes.QSweep.Sweep" [color="black", fontcolor="black", label="Sweep", shape="box", style="filled", fillcolor="#fffaad"];

// QRes.py
"classes.QRes.qResBlank" [color="black", fontcolor="black", label="qResBlank", shape="box", style="filled", fillcolor="#fdb3ff"];
"classes.QRes.qResBase" [color="black", fontcolor="black", label="qResBase", shape="box", style="filled", fillcolor="#fdb3ff"];
"classes.QRes.qResults" [color="black", fontcolor="black", label="qResults", shape="box", style="filled", fillcolor="#fdb3ff"];

// environment.py
"classes.environment._genericOpen" [color="black", fontcolor="black", label="_genericOpen", shape="box", style="filled", fillcolor=darkorchid1];
"classes.environment.dissipatorObj" [color="black", fontcolor="black", label="dissipatorObj", shape="box", style="filled", fillcolor=darkorchid1];
"classes.environment.thermalBath" [color="black", fontcolor="black", label="thermalBath", shape="box", style="filled", fillcolor=darkorchid1];

// QDrive.py
"classes.QDrive.genericDrive" [color="black", fontcolor="black", label="genericDrive", shape="box", style="filled", fillcolor=aquamarine4];
"classes.QDrive.qDrive" [color="black", fontcolor="black", label="qDrive", shape="box", style="filled", fillcolor=aquamarine4];
"classes.QDrive.pulse" [color="black", fontcolor="black", label="pulse", shape="box", style="filled", fillcolor=aquamarine4];



/*
 * Inheritance structure: gathered according to the modules from which the parent class/es live and
 * arranged from: - first from the top of the inheritance, - then what I think is a more fundamental module.
 */

// Inheriting from base.py
"classes.base.qBase" -> "classes.base.named" [arrowhead="empty", arrowtail="none"];
"classes.QPro.copyStep" -> "classes.base.qBase" [arrowhead="empty", arrowtail="none"];
"classes.QRes.qResBase" -> "classes.base.qBase" [arrowhead="empty", arrowtail="none"];
"classes.QSweep.Sweep" -> "classes.base.qBase" [arrowhead="empty", arrowtail="none"];
"classes.baseClasses.updateBase" -> "classes.base.qBase" [arrowhead="empty", arrowtail="none"];
"classes.baseClasses.paramBoundBase" -> "classes.base.qBase" [arrowhead="empty", arrowtail="none"];

// Inheriting from baseClasses.py
"classes.QDrive.genericDrive" -> "classes.baseClasses.paramBoundBase" [arrowhead="empty", arrowtail="none"];
"classes.QPro.Update" -> "classes.baseClasses.updateBase" [arrowhead="empty", arrowtail="none"];
"classes.QPro.genericProtocol" -> "classes.baseClasses.qBaseSim" [arrowhead="empty", arrowtail="none"];
"classes.QSim.Simulation" -> "classes.baseClasses.timeBase" [arrowhead="empty", arrowtail="none"];
"classes.QSweep._sweep" -> "classes.baseClasses.updateBase" [arrowhead="empty", arrowtail="none"];
"classes.QSys.genericQSys" -> "classes.baseClasses.qBaseSim" [arrowhead="empty", arrowtail="none"];
"classes.QSys.termTimeDep" -> "classes.baseClasses.paramBoundBase" [arrowhead="empty", arrowtail="none"];
"classes.baseClasses.computeBase" -> "classes.baseClasses.paramBoundBase" [arrowhead="empty", arrowtail="none"];
"classes.baseClasses.qBaseSim" -> "classes.baseClasses.computeBase" [arrowhead="empty", arrowtail="none"];
"classes.baseClasses.stateBase" -> "classes.baseClasses.computeBase" [arrowhead="empty", arrowtail="none"];
"classes.baseClasses.timeBase" -> "classes.baseClasses.stateBase" [arrowhead="empty", arrowtail="none"];
"classes.environment._genericOpen" -> "classes.baseClasses.paramBoundBase" [arrowhead="empty", arrowtail="none"];

// Inheriting from QSys.py
"classes.QSys.Cavity" -> "classes.QSys.qSystem" [arrowhead="empty", arrowtail="none"];
"classes.QSys.QuantumSystem" -> "classes.QSys.genericQSys" [arrowhead="empty", arrowtail="none"];
"classes.QSys.Qubit" -> "classes.QSys.Spin" [arrowhead="empty", arrowtail="none"];
"classes.QSys.Spin" -> "classes.QSys.qSystem" [arrowhead="empty", arrowtail="none"];
"classes.QSys.compQSystem" -> "classes.QSys.genericQSys" [arrowhead="empty", arrowtail="none"];
"classes.QSys.qCoupling" -> "classes.QSys.termTimeDep" [arrowhead="empty", arrowtail="none"];
"classes.QSys.qSystem" -> "classes.QSys.genericQSys" [arrowhead="empty", arrowtail="none"];
"classes.QSys.term" -> "classes.QSys.termTimeDep" [arrowhead="empty", arrowtail="none"];

// Inheriting from QPro.py
"classes.QPro.Gate" -> "classes.QPro.genericProtocol" [arrowhead="empty", arrowtail="none"];
"classes.QGates.SpinRotation" -> "classes.QPro.Gate" [arrowhead="empty", arrowtail="none"];
"classes.QPro.freeEvolution" -> "classes.QPro.genericProtocol" [arrowhead="empty", arrowtail="none"];
"classes.QPro.qProtocol" -> "classes.QPro.genericProtocol" [arrowhead="empty", arrowtail="none"];
"classes.QGates.xGate" -> "classes.QGates.SpinRotation" [arrowhead="empty", arrowtail="none"];

// Inheriting from QRes.py
"classes.QRes.qResults" -> "classes.QRes.qResBase" [arrowhead="empty", arrowtail="none"];

// Inheriting from environment.py
"classes.environment.dissipatorObj" -> "classes.environment._genericOpen" [arrowhead="empty", arrowtail="none"];
"classes.environment.thermalBath" -> "classes.environment._genericOpen" [arrowhead="empty", arrowtail="none"];

// Inheriting from QDrive.py
"classes.QDrive.pulse" -> "classes.QDrive.genericDrive" [arrowhead="empty", arrowtail="none"];
"classes.QDrive.qDrive" -> "classes.QDrive.genericDrive" [arrowhead="empty", arrowtail="none"];

"classes.QSys.qSystem" -> "classes.QSys.QuantumSystem" [arrowhead="none", color="black", arrowtail="none", fontsize=10, fontcolor=red];
"classes.QSys.compQSystem" -> "classes.QSys.QuantumSystem" [arrowhead="none", color="black", arrowtail="none", fontsize=10, fontcolor=red];

}
